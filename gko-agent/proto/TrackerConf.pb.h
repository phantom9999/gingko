// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TrackerConf.proto

#ifndef PROTOBUF_TrackerConf_2eproto__INCLUDED
#define PROTOBUF_TrackerConf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace bbts {
namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_TrackerConf_2eproto();
void protobuf_InitDefaults_TrackerConf_2eproto();
void protobuf_AssignDesc_TrackerConf_2eproto();
void protobuf_ShutdownFile_TrackerConf_2eproto();

class Tracker;
class TrackerArea;
class TrackerConf;

// ===================================================================

class Tracker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbts.message.Tracker) */ {
 public:
  Tracker();
  virtual ~Tracker();

  Tracker(const Tracker& from);

  inline Tracker& operator=(const Tracker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tracker& default_instance();

  static const Tracker* internal_default_instance();

  void Swap(Tracker* other);

  // implements Message ----------------------------------------------

  inline Tracker* New() const { return New(NULL); }

  Tracker* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tracker& from);
  void MergeFrom(const Tracker& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Tracker* other);
  void UnsafeMergeFrom(const Tracker& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 1;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional int32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bbts.message.Tracker)
 private:
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_InitDefaults_TrackerConf_2eproto_impl();
  friend void  protobuf_AddDesc_TrackerConf_2eproto_impl();
  friend void protobuf_AssignDesc_TrackerConf_2eproto();
  friend void protobuf_ShutdownFile_TrackerConf_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Tracker> Tracker_default_instance_;

// -------------------------------------------------------------------

class TrackerArea : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbts.message.TrackerArea) */ {
 public:
  TrackerArea();
  virtual ~TrackerArea();

  TrackerArea(const TrackerArea& from);

  inline TrackerArea& operator=(const TrackerArea& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackerArea& default_instance();

  static const TrackerArea* internal_default_instance();

  void Swap(TrackerArea* other);

  // implements Message ----------------------------------------------

  inline TrackerArea* New() const { return New(NULL); }

  TrackerArea* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrackerArea& from);
  void MergeFrom(const TrackerArea& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrackerArea* other);
  void UnsafeMergeFrom(const TrackerArea& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string machine_room = 1;
  int machine_room_size() const;
  void clear_machine_room();
  static const int kMachineRoomFieldNumber = 1;
  const ::std::string& machine_room(int index) const;
  ::std::string* mutable_machine_room(int index);
  void set_machine_room(int index, const ::std::string& value);
  void set_machine_room(int index, const char* value);
  void set_machine_room(int index, const char* value, size_t size);
  ::std::string* add_machine_room();
  void add_machine_room(const ::std::string& value);
  void add_machine_room(const char* value);
  void add_machine_room(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& machine_room() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_machine_room();

  // repeated .bbts.message.Tracker tracker = 2;
  int tracker_size() const;
  void clear_tracker();
  static const int kTrackerFieldNumber = 2;
  const ::bbts::message::Tracker& tracker(int index) const;
  ::bbts::message::Tracker* mutable_tracker(int index);
  ::bbts::message::Tracker* add_tracker();
  ::google::protobuf::RepeatedPtrField< ::bbts::message::Tracker >*
      mutable_tracker();
  const ::google::protobuf::RepeatedPtrField< ::bbts::message::Tracker >&
      tracker() const;

  // @@protoc_insertion_point(class_scope:bbts.message.TrackerArea)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> machine_room_;
  ::google::protobuf::RepeatedPtrField< ::bbts::message::Tracker > tracker_;
  friend void  protobuf_InitDefaults_TrackerConf_2eproto_impl();
  friend void  protobuf_AddDesc_TrackerConf_2eproto_impl();
  friend void protobuf_AssignDesc_TrackerConf_2eproto();
  friend void protobuf_ShutdownFile_TrackerConf_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TrackerArea> TrackerArea_default_instance_;

// -------------------------------------------------------------------

class TrackerConf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbts.message.TrackerConf) */ {
 public:
  TrackerConf();
  virtual ~TrackerConf();

  TrackerConf(const TrackerConf& from);

  inline TrackerConf& operator=(const TrackerConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackerConf& default_instance();

  static const TrackerConf* internal_default_instance();

  void Swap(TrackerConf* other);

  // implements Message ----------------------------------------------

  inline TrackerConf* New() const { return New(NULL); }

  TrackerConf* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrackerConf& from);
  void MergeFrom(const TrackerConf& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrackerConf* other);
  void UnsafeMergeFrom(const TrackerConf& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bbts.message.TrackerArea area = 1;
  int area_size() const;
  void clear_area();
  static const int kAreaFieldNumber = 1;
  const ::bbts::message::TrackerArea& area(int index) const;
  ::bbts::message::TrackerArea* mutable_area(int index);
  ::bbts::message::TrackerArea* add_area();
  ::google::protobuf::RepeatedPtrField< ::bbts::message::TrackerArea >*
      mutable_area();
  const ::google::protobuf::RepeatedPtrField< ::bbts::message::TrackerArea >&
      area() const;

  // optional .bbts.message.TrackerArea default = 2;
  bool has_default_() const;
  void clear_default_();
  static const int kDefaultFieldNumber = 2;
  const ::bbts::message::TrackerArea& default_() const;
  ::bbts::message::TrackerArea* mutable_default_();
  ::bbts::message::TrackerArea* release_default_();
  void set_allocated_default_(::bbts::message::TrackerArea* default_);

  // @@protoc_insertion_point(class_scope:bbts.message.TrackerConf)
 private:
  inline void set_has_default_();
  inline void clear_has_default_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::bbts::message::TrackerArea > area_;
  ::bbts::message::TrackerArea* default__;
  friend void  protobuf_InitDefaults_TrackerConf_2eproto_impl();
  friend void  protobuf_AddDesc_TrackerConf_2eproto_impl();
  friend void protobuf_AssignDesc_TrackerConf_2eproto();
  friend void protobuf_ShutdownFile_TrackerConf_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TrackerConf> TrackerConf_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Tracker

// optional string host = 1;
inline bool Tracker::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tracker::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tracker::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tracker::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& Tracker::host() const {
  // @@protoc_insertion_point(field_get:bbts.message.Tracker.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tracker::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bbts.message.Tracker.host)
}
inline void Tracker::set_host(const char* value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bbts.message.Tracker.host)
}
inline void Tracker::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bbts.message.Tracker.host)
}
inline ::std::string* Tracker::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:bbts.message.Tracker.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tracker::release_host() {
  // @@protoc_insertion_point(field_release:bbts.message.Tracker.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tracker::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:bbts.message.Tracker.host)
}

// optional int32 port = 2;
inline bool Tracker::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tracker::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tracker::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tracker::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 Tracker::port() const {
  // @@protoc_insertion_point(field_get:bbts.message.Tracker.port)
  return port_;
}
inline void Tracker::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:bbts.message.Tracker.port)
}

inline const Tracker* Tracker::internal_default_instance() {
  return &Tracker_default_instance_.get();
}
// -------------------------------------------------------------------

// TrackerArea

// repeated string machine_room = 1;
inline int TrackerArea::machine_room_size() const {
  return machine_room_.size();
}
inline void TrackerArea::clear_machine_room() {
  machine_room_.Clear();
}
inline const ::std::string& TrackerArea::machine_room(int index) const {
  // @@protoc_insertion_point(field_get:bbts.message.TrackerArea.machine_room)
  return machine_room_.Get(index);
}
inline ::std::string* TrackerArea::mutable_machine_room(int index) {
  // @@protoc_insertion_point(field_mutable:bbts.message.TrackerArea.machine_room)
  return machine_room_.Mutable(index);
}
inline void TrackerArea::set_machine_room(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bbts.message.TrackerArea.machine_room)
  machine_room_.Mutable(index)->assign(value);
}
inline void TrackerArea::set_machine_room(int index, const char* value) {
  machine_room_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bbts.message.TrackerArea.machine_room)
}
inline void TrackerArea::set_machine_room(int index, const char* value, size_t size) {
  machine_room_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bbts.message.TrackerArea.machine_room)
}
inline ::std::string* TrackerArea::add_machine_room() {
  // @@protoc_insertion_point(field_add_mutable:bbts.message.TrackerArea.machine_room)
  return machine_room_.Add();
}
inline void TrackerArea::add_machine_room(const ::std::string& value) {
  machine_room_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bbts.message.TrackerArea.machine_room)
}
inline void TrackerArea::add_machine_room(const char* value) {
  machine_room_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bbts.message.TrackerArea.machine_room)
}
inline void TrackerArea::add_machine_room(const char* value, size_t size) {
  machine_room_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bbts.message.TrackerArea.machine_room)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TrackerArea::machine_room() const {
  // @@protoc_insertion_point(field_list:bbts.message.TrackerArea.machine_room)
  return machine_room_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TrackerArea::mutable_machine_room() {
  // @@protoc_insertion_point(field_mutable_list:bbts.message.TrackerArea.machine_room)
  return &machine_room_;
}

// repeated .bbts.message.Tracker tracker = 2;
inline int TrackerArea::tracker_size() const {
  return tracker_.size();
}
inline void TrackerArea::clear_tracker() {
  tracker_.Clear();
}
inline const ::bbts::message::Tracker& TrackerArea::tracker(int index) const {
  // @@protoc_insertion_point(field_get:bbts.message.TrackerArea.tracker)
  return tracker_.Get(index);
}
inline ::bbts::message::Tracker* TrackerArea::mutable_tracker(int index) {
  // @@protoc_insertion_point(field_mutable:bbts.message.TrackerArea.tracker)
  return tracker_.Mutable(index);
}
inline ::bbts::message::Tracker* TrackerArea::add_tracker() {
  // @@protoc_insertion_point(field_add:bbts.message.TrackerArea.tracker)
  return tracker_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bbts::message::Tracker >*
TrackerArea::mutable_tracker() {
  // @@protoc_insertion_point(field_mutable_list:bbts.message.TrackerArea.tracker)
  return &tracker_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bbts::message::Tracker >&
TrackerArea::tracker() const {
  // @@protoc_insertion_point(field_list:bbts.message.TrackerArea.tracker)
  return tracker_;
}

inline const TrackerArea* TrackerArea::internal_default_instance() {
  return &TrackerArea_default_instance_.get();
}
// -------------------------------------------------------------------

// TrackerConf

// repeated .bbts.message.TrackerArea area = 1;
inline int TrackerConf::area_size() const {
  return area_.size();
}
inline void TrackerConf::clear_area() {
  area_.Clear();
}
inline const ::bbts::message::TrackerArea& TrackerConf::area(int index) const {
  // @@protoc_insertion_point(field_get:bbts.message.TrackerConf.area)
  return area_.Get(index);
}
inline ::bbts::message::TrackerArea* TrackerConf::mutable_area(int index) {
  // @@protoc_insertion_point(field_mutable:bbts.message.TrackerConf.area)
  return area_.Mutable(index);
}
inline ::bbts::message::TrackerArea* TrackerConf::add_area() {
  // @@protoc_insertion_point(field_add:bbts.message.TrackerConf.area)
  return area_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bbts::message::TrackerArea >*
TrackerConf::mutable_area() {
  // @@protoc_insertion_point(field_mutable_list:bbts.message.TrackerConf.area)
  return &area_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bbts::message::TrackerArea >&
TrackerConf::area() const {
  // @@protoc_insertion_point(field_list:bbts.message.TrackerConf.area)
  return area_;
}

// optional .bbts.message.TrackerArea default = 2;
inline bool TrackerConf::has_default_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrackerConf::set_has_default_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrackerConf::clear_has_default_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrackerConf::clear_default_() {
  if (default__ != NULL) default__->::bbts::message::TrackerArea::Clear();
  clear_has_default_();
}
inline const ::bbts::message::TrackerArea& TrackerConf::default_() const {
  // @@protoc_insertion_point(field_get:bbts.message.TrackerConf.default)
  return default__ != NULL ? *default__
                         : *::bbts::message::TrackerArea::internal_default_instance();
}
inline ::bbts::message::TrackerArea* TrackerConf::mutable_default_() {
  set_has_default_();
  if (default__ == NULL) {
    default__ = new ::bbts::message::TrackerArea;
  }
  // @@protoc_insertion_point(field_mutable:bbts.message.TrackerConf.default)
  return default__;
}
inline ::bbts::message::TrackerArea* TrackerConf::release_default_() {
  // @@protoc_insertion_point(field_release:bbts.message.TrackerConf.default)
  clear_has_default_();
  ::bbts::message::TrackerArea* temp = default__;
  default__ = NULL;
  return temp;
}
inline void TrackerConf::set_allocated_default_(::bbts::message::TrackerArea* default_) {
  delete default__;
  default__ = default_;
  if (default_) {
    set_has_default_();
  } else {
    clear_has_default_();
  }
  // @@protoc_insertion_point(field_set_allocated:bbts.message.TrackerConf.default)
}

inline const TrackerConf* TrackerConf::internal_default_instance() {
  return &TrackerConf_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace bbts

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TrackerConf_2eproto__INCLUDED
