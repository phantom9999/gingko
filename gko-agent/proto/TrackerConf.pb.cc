// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TrackerConf.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TrackerConf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bbts {
namespace message {

namespace {

const ::google::protobuf::Descriptor* Tracker_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tracker_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrackerArea_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrackerArea_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrackerConf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrackerConf_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_TrackerConf_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_TrackerConf_2eproto() {
  protobuf_AddDesc_TrackerConf_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "TrackerConf.proto");
  GOOGLE_CHECK(file != NULL);
  Tracker_descriptor_ = file->message_type(0);
  static const int Tracker_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tracker, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tracker, port_),
  };
  Tracker_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tracker_descriptor_,
      Tracker::internal_default_instance(),
      Tracker_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tracker, _has_bits_),
      -1,
      -1,
      sizeof(Tracker),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tracker, _internal_metadata_));
  TrackerArea_descriptor_ = file->message_type(1);
  static const int TrackerArea_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackerArea, machine_room_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackerArea, tracker_),
  };
  TrackerArea_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrackerArea_descriptor_,
      TrackerArea::internal_default_instance(),
      TrackerArea_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackerArea, _has_bits_),
      -1,
      -1,
      sizeof(TrackerArea),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackerArea, _internal_metadata_));
  TrackerConf_descriptor_ = file->message_type(2);
  static const int TrackerConf_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackerConf, area_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackerConf, default__),
  };
  TrackerConf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrackerConf_descriptor_,
      TrackerConf::internal_default_instance(),
      TrackerConf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackerConf, _has_bits_),
      -1,
      -1,
      sizeof(TrackerConf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackerConf, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_TrackerConf_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tracker_descriptor_, Tracker::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrackerArea_descriptor_, TrackerArea::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrackerConf_descriptor_, TrackerConf::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_TrackerConf_2eproto() {
  Tracker_default_instance_.Shutdown();
  delete Tracker_reflection_;
  TrackerArea_default_instance_.Shutdown();
  delete TrackerArea_reflection_;
  TrackerConf_default_instance_.Shutdown();
  delete TrackerConf_reflection_;
}

void protobuf_InitDefaults_TrackerConf_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  Tracker_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TrackerArea_default_instance_.DefaultConstruct();
  TrackerConf_default_instance_.DefaultConstruct();
  Tracker_default_instance_.get_mutable()->InitAsDefaultInstance();
  TrackerArea_default_instance_.get_mutable()->InitAsDefaultInstance();
  TrackerConf_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_TrackerConf_2eproto_once_);
void protobuf_InitDefaults_TrackerConf_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_TrackerConf_2eproto_once_,
                 &protobuf_InitDefaults_TrackerConf_2eproto_impl);
}
void protobuf_AddDesc_TrackerConf_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_TrackerConf_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021TrackerConf.proto\022\014bbts.message\"%\n\007Tra"
    "cker\022\014\n\004host\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\"K\n\013Trac"
    "kerArea\022\024\n\014machine_room\030\001 \003(\t\022&\n\007tracker"
    "\030\002 \003(\0132\025.bbts.message.Tracker\"b\n\013Tracker"
    "Conf\022\'\n\004area\030\001 \003(\0132\031.bbts.message.Tracke"
    "rArea\022*\n\007default\030\002 \001(\0132\031.bbts.message.Tr"
    "ackerArea", 249);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TrackerConf.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TrackerConf_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_TrackerConf_2eproto_once_);
void protobuf_AddDesc_TrackerConf_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_TrackerConf_2eproto_once_,
                 &protobuf_AddDesc_TrackerConf_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TrackerConf_2eproto {
  StaticDescriptorInitializer_TrackerConf_2eproto() {
    protobuf_AddDesc_TrackerConf_2eproto();
  }
} static_descriptor_initializer_TrackerConf_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tracker::kHostFieldNumber;
const int Tracker::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tracker::Tracker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TrackerConf_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbts.message.Tracker)
}

void Tracker::InitAsDefaultInstance() {
}

Tracker::Tracker(const Tracker& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bbts.message.Tracker)
}

void Tracker::SharedCtor() {
  _cached_size_ = 0;
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

Tracker::~Tracker() {
  // @@protoc_insertion_point(destructor:bbts.message.Tracker)
  SharedDtor();
}

void Tracker::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Tracker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tracker::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tracker_descriptor_;
}

const Tracker& Tracker::default_instance() {
  protobuf_InitDefaults_TrackerConf_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Tracker> Tracker_default_instance_;

Tracker* Tracker::New(::google::protobuf::Arena* arena) const {
  Tracker* n = new Tracker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tracker::Clear() {
// @@protoc_insertion_point(message_clear_start:bbts.message.Tracker)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_host()) {
      host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    port_ = 0;
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Tracker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbts.message.Tracker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string host = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), this->host().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bbts.message.Tracker.host");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_port;
        break;
      }

      // optional int32 port = 2;
      case 2: {
        if (tag == 16) {
         parse_port:
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbts.message.Tracker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbts.message.Tracker)
  return false;
#undef DO_
}

void Tracker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbts.message.Tracker)
  // optional string host = 1;
  if (has_host()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bbts.message.Tracker.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host(), output);
  }

  // optional int32 port = 2;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bbts.message.Tracker)
}

::google::protobuf::uint8* Tracker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbts.message.Tracker)
  // optional string host = 1;
  if (has_host()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bbts.message.Tracker.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host(), target);
  }

  // optional int32 port = 2;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbts.message.Tracker)
  return target;
}

size_t Tracker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbts.message.Tracker)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string host = 1;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional int32 port = 2;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tracker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbts.message.Tracker)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tracker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tracker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbts.message.Tracker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbts.message.Tracker)
    UnsafeMergeFrom(*source);
  }
}

void Tracker::MergeFrom(const Tracker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbts.message.Tracker)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Tracker::UnsafeMergeFrom(const Tracker& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_host()) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (from.has_port()) {
      set_port(from.port());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Tracker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbts.message.Tracker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tracker::CopyFrom(const Tracker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbts.message.Tracker)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Tracker::IsInitialized() const {

  return true;
}

void Tracker::Swap(Tracker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tracker::InternalSwap(Tracker* other) {
  host_.Swap(&other->host_);
  std::swap(port_, other->port_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tracker::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tracker_descriptor_;
  metadata.reflection = Tracker_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Tracker

// optional string host = 1;
bool Tracker::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Tracker::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
void Tracker::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
void Tracker::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
const ::std::string& Tracker::host() const {
  // @@protoc_insertion_point(field_get:bbts.message.Tracker.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Tracker::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bbts.message.Tracker.host)
}
void Tracker::set_host(const char* value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bbts.message.Tracker.host)
}
void Tracker::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bbts.message.Tracker.host)
}
::std::string* Tracker::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:bbts.message.Tracker.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Tracker::release_host() {
  // @@protoc_insertion_point(field_release:bbts.message.Tracker.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Tracker::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:bbts.message.Tracker.host)
}

// optional int32 port = 2;
bool Tracker::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Tracker::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
void Tracker::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
void Tracker::clear_port() {
  port_ = 0;
  clear_has_port();
}
::google::protobuf::int32 Tracker::port() const {
  // @@protoc_insertion_point(field_get:bbts.message.Tracker.port)
  return port_;
}
void Tracker::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:bbts.message.Tracker.port)
}

inline const Tracker* Tracker::internal_default_instance() {
  return &Tracker_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackerArea::kMachineRoomFieldNumber;
const int TrackerArea::kTrackerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackerArea::TrackerArea()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TrackerConf_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbts.message.TrackerArea)
}

void TrackerArea::InitAsDefaultInstance() {
}

TrackerArea::TrackerArea(const TrackerArea& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bbts.message.TrackerArea)
}

void TrackerArea::SharedCtor() {
  _cached_size_ = 0;
}

TrackerArea::~TrackerArea() {
  // @@protoc_insertion_point(destructor:bbts.message.TrackerArea)
  SharedDtor();
}

void TrackerArea::SharedDtor() {
}

void TrackerArea::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrackerArea::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrackerArea_descriptor_;
}

const TrackerArea& TrackerArea::default_instance() {
  protobuf_InitDefaults_TrackerConf_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TrackerArea> TrackerArea_default_instance_;

TrackerArea* TrackerArea::New(::google::protobuf::Arena* arena) const {
  TrackerArea* n = new TrackerArea;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrackerArea::Clear() {
// @@protoc_insertion_point(message_clear_start:bbts.message.TrackerArea)
  machine_room_.Clear();
  tracker_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TrackerArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbts.message.TrackerArea)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string machine_room = 1;
      case 1: {
        if (tag == 10) {
         parse_machine_room:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_machine_room()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_room(this->machine_room_size() - 1).data(),
            this->machine_room(this->machine_room_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bbts.message.TrackerArea.machine_room");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_machine_room;
        if (input->ExpectTag(18)) goto parse_tracker;
        break;
      }

      // repeated .bbts.message.Tracker tracker = 2;
      case 2: {
        if (tag == 18) {
         parse_tracker:
          DO_(input->IncrementRecursionDepth());
         parse_loop_tracker:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tracker()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_tracker;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbts.message.TrackerArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbts.message.TrackerArea)
  return false;
#undef DO_
}

void TrackerArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbts.message.TrackerArea)
  // repeated string machine_room = 1;
  for (int i = 0; i < this->machine_room_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_room(i).data(), this->machine_room(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bbts.message.TrackerArea.machine_room");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->machine_room(i), output);
  }

  // repeated .bbts.message.Tracker tracker = 2;
  for (unsigned int i = 0, n = this->tracker_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tracker(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bbts.message.TrackerArea)
}

::google::protobuf::uint8* TrackerArea::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbts.message.TrackerArea)
  // repeated string machine_room = 1;
  for (int i = 0; i < this->machine_room_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_room(i).data(), this->machine_room(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bbts.message.TrackerArea.machine_room");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->machine_room(i), target);
  }

  // repeated .bbts.message.Tracker tracker = 2;
  for (unsigned int i = 0, n = this->tracker_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->tracker(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbts.message.TrackerArea)
  return target;
}

size_t TrackerArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbts.message.TrackerArea)
  size_t total_size = 0;

  // repeated string machine_room = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->machine_room_size());
  for (int i = 0; i < this->machine_room_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->machine_room(i));
  }

  // repeated .bbts.message.Tracker tracker = 2;
  {
    unsigned int count = this->tracker_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tracker(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrackerArea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbts.message.TrackerArea)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TrackerArea* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackerArea>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbts.message.TrackerArea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbts.message.TrackerArea)
    UnsafeMergeFrom(*source);
  }
}

void TrackerArea::MergeFrom(const TrackerArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbts.message.TrackerArea)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TrackerArea::UnsafeMergeFrom(const TrackerArea& from) {
  GOOGLE_DCHECK(&from != this);
  machine_room_.UnsafeMergeFrom(from.machine_room_);
  tracker_.MergeFrom(from.tracker_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TrackerArea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbts.message.TrackerArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackerArea::CopyFrom(const TrackerArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbts.message.TrackerArea)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TrackerArea::IsInitialized() const {

  return true;
}

void TrackerArea::Swap(TrackerArea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackerArea::InternalSwap(TrackerArea* other) {
  machine_room_.UnsafeArenaSwap(&other->machine_room_);
  tracker_.UnsafeArenaSwap(&other->tracker_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrackerArea::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrackerArea_descriptor_;
  metadata.reflection = TrackerArea_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrackerArea

// repeated string machine_room = 1;
int TrackerArea::machine_room_size() const {
  return machine_room_.size();
}
void TrackerArea::clear_machine_room() {
  machine_room_.Clear();
}
const ::std::string& TrackerArea::machine_room(int index) const {
  // @@protoc_insertion_point(field_get:bbts.message.TrackerArea.machine_room)
  return machine_room_.Get(index);
}
::std::string* TrackerArea::mutable_machine_room(int index) {
  // @@protoc_insertion_point(field_mutable:bbts.message.TrackerArea.machine_room)
  return machine_room_.Mutable(index);
}
void TrackerArea::set_machine_room(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bbts.message.TrackerArea.machine_room)
  machine_room_.Mutable(index)->assign(value);
}
void TrackerArea::set_machine_room(int index, const char* value) {
  machine_room_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bbts.message.TrackerArea.machine_room)
}
void TrackerArea::set_machine_room(int index, const char* value, size_t size) {
  machine_room_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bbts.message.TrackerArea.machine_room)
}
::std::string* TrackerArea::add_machine_room() {
  // @@protoc_insertion_point(field_add_mutable:bbts.message.TrackerArea.machine_room)
  return machine_room_.Add();
}
void TrackerArea::add_machine_room(const ::std::string& value) {
  machine_room_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bbts.message.TrackerArea.machine_room)
}
void TrackerArea::add_machine_room(const char* value) {
  machine_room_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bbts.message.TrackerArea.machine_room)
}
void TrackerArea::add_machine_room(const char* value, size_t size) {
  machine_room_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bbts.message.TrackerArea.machine_room)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TrackerArea::machine_room() const {
  // @@protoc_insertion_point(field_list:bbts.message.TrackerArea.machine_room)
  return machine_room_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TrackerArea::mutable_machine_room() {
  // @@protoc_insertion_point(field_mutable_list:bbts.message.TrackerArea.machine_room)
  return &machine_room_;
}

// repeated .bbts.message.Tracker tracker = 2;
int TrackerArea::tracker_size() const {
  return tracker_.size();
}
void TrackerArea::clear_tracker() {
  tracker_.Clear();
}
const ::bbts::message::Tracker& TrackerArea::tracker(int index) const {
  // @@protoc_insertion_point(field_get:bbts.message.TrackerArea.tracker)
  return tracker_.Get(index);
}
::bbts::message::Tracker* TrackerArea::mutable_tracker(int index) {
  // @@protoc_insertion_point(field_mutable:bbts.message.TrackerArea.tracker)
  return tracker_.Mutable(index);
}
::bbts::message::Tracker* TrackerArea::add_tracker() {
  // @@protoc_insertion_point(field_add:bbts.message.TrackerArea.tracker)
  return tracker_.Add();
}
::google::protobuf::RepeatedPtrField< ::bbts::message::Tracker >*
TrackerArea::mutable_tracker() {
  // @@protoc_insertion_point(field_mutable_list:bbts.message.TrackerArea.tracker)
  return &tracker_;
}
const ::google::protobuf::RepeatedPtrField< ::bbts::message::Tracker >&
TrackerArea::tracker() const {
  // @@protoc_insertion_point(field_list:bbts.message.TrackerArea.tracker)
  return tracker_;
}

inline const TrackerArea* TrackerArea::internal_default_instance() {
  return &TrackerArea_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackerConf::kAreaFieldNumber;
const int TrackerConf::kDefaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackerConf::TrackerConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_TrackerConf_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbts.message.TrackerConf)
}

void TrackerConf::InitAsDefaultInstance() {
  default__ = const_cast< ::bbts::message::TrackerArea*>(
      ::bbts::message::TrackerArea::internal_default_instance());
}

TrackerConf::TrackerConf(const TrackerConf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bbts.message.TrackerConf)
}

void TrackerConf::SharedCtor() {
  _cached_size_ = 0;
  default__ = NULL;
}

TrackerConf::~TrackerConf() {
  // @@protoc_insertion_point(destructor:bbts.message.TrackerConf)
  SharedDtor();
}

void TrackerConf::SharedDtor() {
  if (this != &TrackerConf_default_instance_.get()) {
    delete default__;
  }
}

void TrackerConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrackerConf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrackerConf_descriptor_;
}

const TrackerConf& TrackerConf::default_instance() {
  protobuf_InitDefaults_TrackerConf_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TrackerConf> TrackerConf_default_instance_;

TrackerConf* TrackerConf::New(::google::protobuf::Arena* arena) const {
  TrackerConf* n = new TrackerConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrackerConf::Clear() {
// @@protoc_insertion_point(message_clear_start:bbts.message.TrackerConf)
  if (has_default_()) {
    if (default__ != NULL) default__->::bbts::message::TrackerArea::Clear();
  }
  area_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TrackerConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbts.message.TrackerConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bbts.message.TrackerArea area = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_area:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_area()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_area;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_default;
        break;
      }

      // optional .bbts.message.TrackerArea default = 2;
      case 2: {
        if (tag == 18) {
         parse_default:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_default_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbts.message.TrackerConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbts.message.TrackerConf)
  return false;
#undef DO_
}

void TrackerConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbts.message.TrackerConf)
  // repeated .bbts.message.TrackerArea area = 1;
  for (unsigned int i = 0, n = this->area_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->area(i), output);
  }

  // optional .bbts.message.TrackerArea default = 2;
  if (has_default_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->default__, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bbts.message.TrackerConf)
}

::google::protobuf::uint8* TrackerConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbts.message.TrackerConf)
  // repeated .bbts.message.TrackerArea area = 1;
  for (unsigned int i = 0, n = this->area_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->area(i), false, target);
  }

  // optional .bbts.message.TrackerArea default = 2;
  if (has_default_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->default__, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbts.message.TrackerConf)
  return target;
}

size_t TrackerConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbts.message.TrackerConf)
  size_t total_size = 0;

  // optional .bbts.message.TrackerArea default = 2;
  if (has_default_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->default__);
  }

  // repeated .bbts.message.TrackerArea area = 1;
  {
    unsigned int count = this->area_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->area(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrackerConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbts.message.TrackerConf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TrackerConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackerConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbts.message.TrackerConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbts.message.TrackerConf)
    UnsafeMergeFrom(*source);
  }
}

void TrackerConf::MergeFrom(const TrackerConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbts.message.TrackerConf)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TrackerConf::UnsafeMergeFrom(const TrackerConf& from) {
  GOOGLE_DCHECK(&from != this);
  area_.MergeFrom(from.area_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_default_()) {
      mutable_default_()->::bbts::message::TrackerArea::MergeFrom(from.default_());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TrackerConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbts.message.TrackerConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackerConf::CopyFrom(const TrackerConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbts.message.TrackerConf)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TrackerConf::IsInitialized() const {

  return true;
}

void TrackerConf::Swap(TrackerConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackerConf::InternalSwap(TrackerConf* other) {
  area_.UnsafeArenaSwap(&other->area_);
  std::swap(default__, other->default__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrackerConf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrackerConf_descriptor_;
  metadata.reflection = TrackerConf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrackerConf

// repeated .bbts.message.TrackerArea area = 1;
int TrackerConf::area_size() const {
  return area_.size();
}
void TrackerConf::clear_area() {
  area_.Clear();
}
const ::bbts::message::TrackerArea& TrackerConf::area(int index) const {
  // @@protoc_insertion_point(field_get:bbts.message.TrackerConf.area)
  return area_.Get(index);
}
::bbts::message::TrackerArea* TrackerConf::mutable_area(int index) {
  // @@protoc_insertion_point(field_mutable:bbts.message.TrackerConf.area)
  return area_.Mutable(index);
}
::bbts::message::TrackerArea* TrackerConf::add_area() {
  // @@protoc_insertion_point(field_add:bbts.message.TrackerConf.area)
  return area_.Add();
}
::google::protobuf::RepeatedPtrField< ::bbts::message::TrackerArea >*
TrackerConf::mutable_area() {
  // @@protoc_insertion_point(field_mutable_list:bbts.message.TrackerConf.area)
  return &area_;
}
const ::google::protobuf::RepeatedPtrField< ::bbts::message::TrackerArea >&
TrackerConf::area() const {
  // @@protoc_insertion_point(field_list:bbts.message.TrackerConf.area)
  return area_;
}

// optional .bbts.message.TrackerArea default = 2;
bool TrackerConf::has_default_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TrackerConf::set_has_default_() {
  _has_bits_[0] |= 0x00000002u;
}
void TrackerConf::clear_has_default_() {
  _has_bits_[0] &= ~0x00000002u;
}
void TrackerConf::clear_default_() {
  if (default__ != NULL) default__->::bbts::message::TrackerArea::Clear();
  clear_has_default_();
}
const ::bbts::message::TrackerArea& TrackerConf::default_() const {
  // @@protoc_insertion_point(field_get:bbts.message.TrackerConf.default)
  return default__ != NULL ? *default__
                         : *::bbts::message::TrackerArea::internal_default_instance();
}
::bbts::message::TrackerArea* TrackerConf::mutable_default_() {
  set_has_default_();
  if (default__ == NULL) {
    default__ = new ::bbts::message::TrackerArea;
  }
  // @@protoc_insertion_point(field_mutable:bbts.message.TrackerConf.default)
  return default__;
}
::bbts::message::TrackerArea* TrackerConf::release_default_() {
  // @@protoc_insertion_point(field_release:bbts.message.TrackerConf.default)
  clear_has_default_();
  ::bbts::message::TrackerArea* temp = default__;
  default__ = NULL;
  return temp;
}
void TrackerConf::set_allocated_default_(::bbts::message::TrackerArea* default_) {
  delete default__;
  default__ = default_;
  if (default_) {
    set_has_default_();
  } else {
    clear_has_default_();
  }
  // @@protoc_insertion_point(field_set_allocated:bbts.message.TrackerConf.default)
}

inline const TrackerConf* TrackerConf::internal_default_instance() {
  return &TrackerConf_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace bbts

// @@protoc_insertion_point(global_scope)
